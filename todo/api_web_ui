block panel:
      research by:
      	       block info :
      	       	     size
	       	     start addr
	       	     end addr
	       	     alloc by realloc
	       	     pc alloc
	       	     sym alloc
	       	     module alloc
	       	     free
	       	     free by realloc
	       	     pc fre
	       	     sym free
		     module free

	       access info:
	       	      read
		      write
		      offset
		      size
		      memory addr
		      nb hit
		      pc of instr
		      func
		      sym of instr
		      module os instr

      search block view:
      	    list of all block (with summary info) who match (when click switch to mono block view)

      search access view:
      	    list of all access (with summary info) who match (when click switch to mono access view)

      mono block view:
      	   detail of block
	   a search access view with all access of that block by access info feature
	   click on a access => mono access view
	   link to struct view (if this block is attached to any struct) => switch to struct panel

      mono access view:
      	   detail of access
	   link to block view who posses this access


struct panel:
       an inner struct is only a member with a link to the inner struct to modify member os the inner struct

       search struct view:
       	      search by:
	      	     size
		     nb member
		     type member
		     member size
		     member name
		     name

       mono struct view:
       	      name of the struct
       	      schema of the struct (vertical):
       	      	      size of each member proportional
	      	      for each member:
	      	      	  quick summary (who many read/write access, size, type, name)
		  	  link to a search access view with all access to this member (including overlapped)
	      link to search block view with all block who are linked with this struct

       edit view:
       	      click on name => change it
       	      schema of the struct like in data view:
	      	     when you click on a member you can change size + type + name (associated acces have to be recalculate after a modif)
	      a link to a search block view with associate and disassociate button on each block

       create view (button on data view):
       	      a search block view with all block non associate with a struct
	      select one and go to mono struct view (ask backend to calcule new struct from the selected block)



api : get blocks (some data do identify what block are needed)
      get accesses (some data do identify what access are needed)
      get accesses from block (block data)
      get block from access (access data)
      get structs (some data to identify struct)
      get blocks from struct (struct data)
      get struct from block (block data)
      maj struct (old data, new data for struct, only member et name)
      associate blocks (struct data + struct block(s))
      unassociate blocks (struct data + struct block(s))
      get accesses from struct (struc data)
      process_struct_from_block(block data) // for creating a new one associate with the block, return the new struct info
      delete_struct (data struct)


pages:
	block view with iframe to access search (data info python generated)
	access view with iframe to block search (access info python generated)
	struct view with iframe to block search (struct info python generated)
	block search (search data get by ajax, param to the ajax request in url)
	access search (search data get by ajax, param to the ajax request in url)
	struct search (search data get by ajax, param to the ajax request in url), detail on member will be on an other iframe like a pop-up (because there are not a lot of data to diplay except for inner structure, for them it will have summary + like to a struct view of the inner struct)
	
python class:
       struct
       block
       access


struct by struct_id
member by struct_id.offset (ex: 1.0x4 of member at offset 4 in struct with id 1)
for inner struct:
    ex: 1.0x4.0x2 (for offset 2 in inner struct at offset 4 in struct with id 1)
block by block_id
access by access_id